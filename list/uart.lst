C51 COMPILER V9.00   UART                                                                  10/14/2017 10:05:16 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\list\uart.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE uart.c BROWSE DEBUG OBJECTEXTEND PRINT(.\list\uart.lst) OBJECT(.\list\uart.
                    -obj)

line level    source

   1          #include "uart.h"
   2          #include<string.h>
   3          
   4          #define Uart1_Buf_Max 20               //串口数据缓存长度
   5          #define BaudRate2               9600UL  //选择波特率
   6          #define Timer2_Reload   (65536UL -(MAIN_Fosc / 4 / BaudRate2))          //Timer 2 重装值， 对应300KHZ
   7          
   8          xdata u8 Rec_Buf[Uart1_Buf_Max];  //串口数据缓存
   9          xdata u8 point1 = 0;             //绶存指针
  10          
  11          #define Uart2_Buf_Max 20               //串口数据缓存长度
  12          xdata u8 Uart2_Rec_Buf[Uart2_Buf_Max];  //串口数据缓存
  13          xdata u8 point2 = 0;             //绶存指针
  14          bit     B_TX2_Busy = 0; //发送忙标志
  15          
  16          
  17          void UartInit(void)             //9600bps@11.0592MHz
  18          {
  19   1      //注意: STC15W4K32S4系列的芯片,上电后所有与PWM相关的IO口均为
  20   1      //      高阻态,需将这些口设置为准双向口或强推挽模式方可正常使用
  21   1      //相关IO: P0.6/P0.7/P1.6/P1.7/P2.1/P2.2
  22   1      //        P2.3/P2.7/P3.7/P4.2/P4.4/P4.5
  23   1      
  24   1      
  25   1              S2CON &= ~(1<<7);       //8位数据
  26   1              P_SW2 &= ~1;            //UART2 使用P1.0 P1.1口 默认
  27   1      //      P_SW2 |=  1;            //UART2 使用P4.6 P4.7口
  28   1      
  29   1              AUXR &= ~(1<<4);        //Timer stop
  30   1              AUXR &= ~(1<<3);        //Timer2 set As Timer
  31   1              AUXR |=  (1<<2);        //Timer2 set as 1T mode
  32   1              T2H = (u8)(Timer2_Reload >> 8);
  33   1              T2L = (u8)Timer2_Reload;
  34   1              IE2   |=  1;            //允许中断
  35   1              S2CON |=  (1<<4);       //允许接收
  36   1              AUXR |=  (1<<4);        //Timer run enable
  37   1      
  38   1              UART2_INT_ENABLE();
  39   1              ES = 1;
  40   1              EA = 1;
  41   1      }
  42          
  43          /*----------------------------
  44          发送串口数据
  45          ----------------------------*/
  46          void SendData(unsigned char ch)
  47          {
  48   1          SBUF = ch;                 //写数据到UART数据寄存器
  49   1                      while(TI == 0);
  50   1                      TI = 0;
  51   1      }
  52          
  53          /*----------------------------
  54          发送字符串
C51 COMPILER V9.00   UART                                                                  10/14/2017 10:05:16 PAGE 2   

  55          ----------------------------*/
  56          void SendString(char *s)
  57          {
  58   1          while (*s)                  //检测字符串结束标志
  59   1          {
  60   2              SendData(*s++);         //发送当前字符
  61   2          }
  62   1      }
  63          
  64          bit Hand(unsigned char *a)                   // 串口命令识别函数
  65          { 
  66   1          if(strstr(Rec_Buf,a)!=NULL)
  67   1                  return 1;
  68   1              else
  69   1                      return 0;
  70   1      }
  71          
  72          void CLR_Buf(void)                           // 串口缓存清理
  73          {
  74   1              memset(Rec_Buf, 0, Uart1_Buf_Max);      //清空
  75   1      
  76   1          point1 = 0;                    
  77   1      }
  78          
  79          void Usart() interrupt 4 using 1            // 串口中断函数
  80          {
  81   1              ES = 0;
  82   1              if (RI)
  83   1          {
  84   2            RI = 0;                                //清除RI位
  85   2                      Rec_Buf[point1] = SBUF; 
  86   2      //              if (Rec_Buf[0] == 0xd9)
  87   2      //                      {
  88   2      //                              IAP_CONTR = 0x60;
  89   2      //                      }
  90   2                              
  91   2                      point1++;               
  92   2                      if(point1>=Uart1_Buf_Max)          
  93   2                      {
  94   3                              point1 = 0;
  95   3                      }           
  96   2      
  97   2          }
  98   1          if (TI)
  99   1          {
 100   2              TI = 0;                 //清除TI位
 101   2      
 102   2          }
 103   1                      ES =  1;
 104   1      }
 105          
 106          /*----------------------------
 107          通过串口2发送串口数据
 108          ----------------------------*/
 109          void Uart2SendData(unsigned char ch)
 110          {
 111   1              while(B_TX2_Busy);      //不忙后发送数据
 112   1          S2BUF = ch;                 //写数据到UART数据寄存器
 113   1              B_TX2_Busy = 1;
 114   1      }
 115          
 116          /*----------------------------
C51 COMPILER V9.00   UART                                                                  10/14/2017 10:05:16 PAGE 3   

 117          通过串口2发送字符串
 118          ----------------------------*/
 119          void Uart2SendString(char *s)
 120          {
 121   1          while (*s)                  //检测字符串结束标志
 122   1          {
 123   2              Uart2SendData(*s++);         //发送当前字符
 124   2          }
 125   1      }
 126          
 127          bit Uart2Hand(unsigned char *a)                   // 串口命令识别函数
 128          { 
 129   1          if(strstr(Uart2_Rec_Buf,a)!=NULL)
 130   1                  return 1;
 131   1              else
 132   1                      return 0;
 133   1      }
 134          
 135          void Uart2CLR_Buf(void)                           // 串口缓存清理
 136          {
 137   1              memset(Uart2_Rec_Buf, 0, Uart2_Buf_Max);      //清空
 138   1      
 139   1          point2 = 0;                    
 140   1      }
 141          
 142          void Usart2() interrupt 8 using 1 
 143          {
 144   1              UART2_INT_DISABLE();    
 145   1              if(RI2)
 146   1          {
 147   2                      CLR_RI2();                               //清除RI位
 148   2                      Uart2_Rec_Buf[point2] = S2BUF; 
 149   2      //              if (Rec_Buf[0] == 0xd9)
 150   2      //                      {
 151   2      //                              IAP_CONTR = 0x60;
 152   2      //                      }
 153   2                              
 154   2                      point2++;               
 155   2                      if(point2>=Uart2_Buf_Max)          
 156   2                      {
 157   3                              point2 = 0;
 158   3                      }           
 159   2      
 160   2          }
 161   1          if (TI2)
 162   1          {
 163   2              CLR_TI2();                //清除TI位
 164   2                      B_TX2_Busy = 0; //清空忙标志
 165   2      
 166   2          }
 167   1              UART2_INT_ENABLE();     
 168   1      }
 169          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    362    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     42    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.00   UART                                                                  10/14/2017 10:05:16 PAGE 4   

   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
